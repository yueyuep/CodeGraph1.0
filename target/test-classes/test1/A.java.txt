{"fileName":"data/A.java","version":"test1","hasMethodName":["main-A.innerClass-String[]","main-A-String[]"]}
{"fileName":"data/A.java","version":"test1","methodName":"main-A.innerClass-String[]","callMethodNameReferTo":{},"num":18,"succs":[[6,1,4,5,2,3],[2],[],[4],[],[8,7],[10],[9],[],[],[11],[12,13,14],[15,16],[],[17],[],[],[]],"attribute":["Method Declaration ","public ","static ","Void Type ","Simple Name main ","Parameter String[] args ","Block Stmt ","Array Type 1 ","Simple Name args ","Class Or Interface Type String ","Expression Stmt ","Method Call Expr ","Field Access Expr ","Simple Name println ","String Literal Expr Not Empty  ","Name Expr System ","Simple Name out ","StringLiteralExpr"]}
{"fileName":"data/A.java","version":"test1","methodName":"main-A-String[]","callMethodNameReferTo":{"44":"H:/CodeGraph1.0/src/test/resources/test1/data/B.java?test-B","46":"H:/CodeGraph1.0/src/test/resources/test1/data/B.java?test1-B-String"},"num":49,"succs":[[15,1],[29,2],[3,36],[4,44],[46],[8,6,9,11,7,10],[7],[],[9],[],[13,12],[4,0,1,3,2],[14],[],[],[16],[17,19,18],[18],[],[20,21,22],[],[],[24,25,27,26,23],[28],[28],[28],[28],[28],[],[30,32,31],[33,34],[],[35],[],[],[],[40],[38],[],[38,37],[42,41,38],[38],[43],[],[37,45],[],[47,48,39],[],[35]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","public ","static ","Void Type ","Simple Name main ","Parameter String[] args ","Block Stmt ","Array Type 1 ","Simple Name args ","Class Or Interface Type String ","Variable Declaration Expr ","Variable Declarator int[] arrays = ","Array Type 1 ","Simple Name arrays ","Array Creation Expr int Array Creation Level Not Empty Array Initializer Expr ","Primitive Type int ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Integer Literal Expr Note Zero  ","Integer Literal Expr Note Zero  ","Integer Literal Expr Note Zero  ","Integer Literal Expr Note Zero  ","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Method Call Expr ","Field Access Expr ","Simple Name println ","String Literal Expr Not Empty  ","Name Expr System ","Simple Name out ","StringLiteralExpr","Variable Declaration Expr ","Name Expr b ","Simple Name b ","Name Expr b ","Variable Declarator B b = ","Class Or Interface Type B ","Object Creation Expr B Optional.empty Optional.empty ","Class Or Interface Type B ","Method Call Expr ","Simple Name test ","Method Call Expr ","Simple Name test1 ","String Literal Expr Not Empty  "]}
